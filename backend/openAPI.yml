openapi: 3.0.0

servers:
  - description: Development server URL
    url: http://127.0.0.1:3333/
  - description: Production test server URL
    url: https://reservalab.api-sact-test.com/

info:
  description: HTTP Requests guide to utilize the ReservaLab API.
  version: "1.0.0"
  title: ReservaLab API

tags:
  - name: authentication
  - name: users
  - name: appointments
  - name: subjects
  - name: laboratories
  - name: classrooms
  - name: schedules
  - name: notifications

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: JWT token | User position is missing
    IncorrectToken:
      description: Invalid JWT token
  schemas:
    User:
      properties:
        id:
          type: string
          format: uuid
        ra:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        position:
          type: string
        subjects:
          type: string
        avatar:
          type: string
          format: binary
        password:
          type: string
        created_at:
          type: string
          format: dateformat
        updated_at:
          type: string
          format: dateformat
    Appointment:
      properties:
        id:
          type: string
          format: uuid
        teacher_id:
          type: string
          format: uuid
        laboratory_id:
          type: string
          format: uuid
        year:
          type: number
        month:
          type: number
        day:
          type: number
        time:
          type: string
        subject:
          type: string
        classroom:
          type: string
        status:
          type: string
        observations:
          type: string
        created_at:
          type: string
          format: dateformat
        updated_at:
          type: string
          format: dateformat
    Subject:
      properties:
        id:
          type: string
          format: uuid
        subjects:
          type: string
        created_at:
          type: string
          format: dateformat
        updated_at:
          type: string
          format: dateformat
    Laboratory:
      properties:
        id:
          type: string
          format: uuid
        laboratories:
          type: string
        created_at:
          type: string
          format: dateformat
        updated_at:
          type: string
          format: dateformat
    Classroom:
      properties:
        id:
          type: string
          format: uuid
        classroom:
          type: string
        created_at:
          type: string
          format: dateformat
        updated_at:
          type: string
          format: dateformat
    Schedule:
      properties:
        id:
          type: string
          format: uuid
        schedule_name:
          type: string
        schedule_begin:
          type: string
        schedule_end:
          type: string
        created_at:
          type: string
          format: dateformat
        updated_at:
          type: string
          format: dateformat
    Notification:
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        description:
          type: string
        sender_user_id:
          type: string
          format: uuid
        recipient_user_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: dateformat
        updated_at:
          type: string
          format: dateformat

paths:
  /sessions:
    post:
      summary: Creates an user session.
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  ra:
                    type: string
                    example: "111111"
                  password:
                    type: string
                    example: "user password"
      responses:
        '200':
          description: Returns a JSON containing the User data and a JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  User:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                      ra:
                        type: string
                        example: "111111"
                      name:
                        type: string
                        example: "User Name"
                      email:
                        type: string
                        format: email
                        example: "User@email.com"
                      position:
                        type: string
                        example: "teacher"
                      subjects:
                        type: string
                        example: "Subject 1, Subject 2"
                      avatar_url:
                        type: string
                        example: null
                      created_at:
                        type: string
                        format: dateformat
                        example: "2020-07-02T21:57:00.421Z"
                      updated_at:
                        type: string
                        format: dateformat
                        example: "2020-07-02T21:57:00.421Z"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1OTcxMTQ0MDgsImV4cCI6MTU5NzIwMDgwOCwic3ViIjoiMWEwMWY3ZmYtYzZlMy00M2NiLThiNzQtY2YxOWVhZDYyMDdhIn0.P_NlcLb0Ob6j9pC6DxDJiF2q7Xrx6qqWkgOcUgqCpro"
        '401':
          description: 'Incorrect login/password combination.'
  /password/forgot:
    post:
      summary: Generates a token for password recovering.
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "user@email.com"
      responses:
        '204':
          description: Confirmation of token sent to email successfully.
        '400':
          description: User does not exists.
  /password/reset:
    post:
      summary: Resets the user password.
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "new user password"
                password_confirmation:
                  type: string
                  example: "new user password"
                token:
                  type: string
                  format: uuid
                  example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
      responses:
        '204':
          description: Confirmation of user password changed successfully.
        '400':
          description: Token expired | User token doesn't not exists.

  /users:
    post:
      summary: Creates an user.
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  ra:
                    type: string
                    example: "111111"
                  name:
                    type: string
                    example: "user Name"
                  email:
                    type: string
                    format: email
                    example: "user@email.com"
                  position:
                    type: string
                    example: "teacher"
                  subjects:
                    type: string
                    example: "Subject 1, Subject 2"
                  password:
                    type: string
                    example: "user password"
      responses:
        '200':
          description: Returns a JSON containing the created user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  ra:
                    type: string
                    example: "111111"
                  name:
                    type: string
                    example: "User Name"
                  email:
                    type: string
                    format: email
                    example: "user@email.com"
                  position:
                    type: string
                    example: "teacher"
                  subjects:
                    type: string
                    example: "Subject 1, Subject 2"
                  avatar_url:
                    type: string
                    example: null
                  created_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
                  updated_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
    put:
      summary: Updates the user.
      tags:
        - users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  ra:
                    type: string
                    example: "111111"
                  name:
                    type: string
                    example: "New User Name"
                  email:
                    type: string
                    format: email
                    example: "newuser@email.com"
                  position:
                    type: string
                    example: "teacher"
                  subjects:
                    type: string
                    example: "Subject 1, Subject 2"
                  old_password:
                    type: string
                    example: "old user password"
                  new_password:
                    type: string
                    example: "new user password"
      responses:
        '200':
          description: Returns a JSON containing the updated user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  ra:
                    type: string
                    example: "111111"
                  name:
                    type: string
                    example: "New User Name"
                  email:
                    type: string
                    format: email
                    example: "newuser@email.com"
                  position:
                    type: string
                    example: "teacher"
                  subjects:
                    type: string
                    example: "Subject 1, Subject 2"
                  avatar_url:
                    type: string
                    example: null
                  created_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
                  updated_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      summary: Deletes the user.
      tags:
        - users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a successfully deleted user confirmation.
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    get:
      summary: Gets the authenticated user.
      tags:
        - users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON containing the user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  ra:
                    type: string
                    example: "111111"
                  name:
                    type: string
                    example: "User Name"
                  email:
                    type: string
                    format: email
                    example: "user@email.com"
                  position:
                    type: string
                    example: "teacher"
                  subjects:
                    type: string
                    example: "Subject 1, Subject 2"
                  avatar_url:
                    type: string
                    example: null
                  created_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
                  updated_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /users/{id}:
    put:
      summary: Updates an user.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
          required: true
          description: User id to update it.
      tags:
        - users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  ra:
                    type: string
                    example: "111111"
                  name:
                    type: string
                    example: "New User Name"
                  email:
                    type: string
                    format: email
                    example: "newuser@email.com"
                  position:
                    type: string
                    example: "teacher"
                  subjects:
                    type: string
                    example: "Subject 1, Subject 2"
      responses:
        '200':
          description: Returns a JSON containing the updated user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  ra:
                    type: string
                    example: "111111"
                  name:
                    type: string
                    example: "User Name"
                  email:
                    type: string
                    format: email
                    example: "user@email.com"
                  position:
                    type: string
                    example: "teacher"
                  subjects:
                    type: string
                    example: "Subject 1, Subject 2"
                  avatar_url:
                    type: string
                    example: null
                  created_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
                  updated_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      summary: Deletes an user.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
          required: true
          description: User id to delete it.
      tags:
        - users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a successfully deleted user confirmation.
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /users/all:
    get:
      summary: Gets all teachers (users).
      tags:
        - users
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A string to search for specific teachers.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON array containing all teachers.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                    ra:
                      type: string
                      example: "111111"
                    name:
                      type: string
                      example: "New User Name"
                    email:
                      type: string
                      format: email
                      example: "newuser@email.com"
                    position:
                      type: string
                      example: "teacher"
                    subjects:
                      type: string
                      example: "Subject 1, Subject 2"
                    avatar_url:
                      type: string
                      example: "https://image_upload_provider/2196cf1aec2f18533aaf-file_name.png"
                    created_at:
                      type: string
                      format: dateformat
                      example: "2020-07-02T21:57:00.421Z"
                    updated_at:
                      type: string
                      format: dateformat
                      example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /users/avatar:
    patch:
      summary: Updates the user avatar.
      tags:
        - users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        '200':
          description: Returns a JSON containing the updated user with avatar data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  ra:
                    type: string
                    example: "111111"
                  name:
                    type: string
                    example: "New User Name"
                  email:
                    type: string
                    format: email
                    example: "newuser@email.com"
                  position:
                    type: string
                    example: "teacher"
                  subjects:
                    type: string
                    example: "Subject 1, Subject 2"
                  avatar_url:
                    type: string
                    example: "https://image_upload_provider/2196cf1aec2f18533aaf-file_name.png"
                  created_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
                  updated_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /appointments:
    post:
      summary: Creates an appointment.
      tags:
        - appointments
      parameters:
        - in: query
          name: teacher_id
          schema:
            type: string
            format: uuid
            example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
          description: A teacher id to create the related appointment.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  laboratory_number:
                    type: number
                    example: 1
                  time:
                    type: string
                    example: "1, 2"
                  year:
                    type: number
                    example: 2020
                  month:
                    type: number
                    example: 9
                  day:
                    type: number
                    example: 2
                  subject:
                    type: string
                    example: "Subject Name"
                  classroom:
                    type: string
                    example: "Classroom 1"
                  status:
                    type: string
                    example: "scheduled"
                  observations:
                    type: string
                    example: "Appointment observations"
      responses:
        '200':
          description: Returns a JSON containing the created appointment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  teacher_id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  laboratory_number:
                    type: number
                    example: 1
                  time:
                    type: string
                    example: "1, 2"
                  year:
                    type: number
                    example: 2020
                  month:
                    type: number
                    example: 9
                  day:
                    type: number
                    example: 2
                  subject:
                    type: string
                    example: "Subject Name"
                  classroom:
                    type: string
                    example: "Classroom 1"
                  status:
                    type: string
                    example: "scheduled"
                  observations:
                    type: string
                    example: "Appointment observations"
                  created_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
                  updated_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /appointments/{id}:
    put:
      summary: Updates an appointment status.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
          required: true
          description: Appointment id to update it.
      tags:
        - appointments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "presence"
      responses:
        '200':
          description: Returns a JSON containing the updated appointment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  teacher_id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  laboratory_number:
                    type: number
                    example: 1
                  time:
                    type: string
                    example: "1, 2"
                  year:
                    type: number
                    example: 2020
                  month:
                    type: number
                    example: 9
                  day:
                    type: number
                    example: 2
                  subject:
                    type: string
                    example: "Subject Name"
                  classroom:
                    type: string
                    example: "Classroom 1"
                  status:
                    type: string
                    example: "presence"
                  observations:
                    type: string
                    example: "Appointment observations"
                  created_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
                  updated_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      summary: Deletes an appointment.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
          required: true
          description: Appointment id to delete it.
      tags:
        - appointments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a successfully deleted appointment confirmation.
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /appointments/all:
    get:
      summary: Gets all appointments by date.
      tags:
        - appointments
      parameters:
        - in: query
          name: year
          schema:
            type: number
          description: A number to reference the year for searching.
        - in: query
          name: month
          schema:
            type: number
          description: A number to reference the month for searching.
        - in: query
          name: day
          schema:
            type: number
          description: A number to reference the day for searching.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON array containing all appointments.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                    teacher_id:
                      type: string
                      format: uuid
                      example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                    laboratory_number:
                      type: number
                      example: 1
                    time:
                      type: string
                      example: "1, 2"
                    year:
                      type: number
                      example: 2020
                    month:
                      type: number
                      example: 9
                    day:
                      type: number
                      example: 2
                    subject:
                      type: string
                      example: "Subject Name"
                    classroom:
                      type: string
                      example: "Classroom 1"
                    status:
                      type: string
                      example: "scheduled"
                    observations:
                      type: string
                      example: "Appointment observations"
                    created_at:
                      type: string
                      format: dateformat
                      example: "2020-07-02T21:57:00.421Z"
                    updated_at:
                      type: string
                      format: dateformat
                      example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /appointments/clean/{operation}:
    delete:
      summary: Deletes the appointments.
      parameters:
        - in: path
          name: operation
          schema:
            type: string
            example: "old"
          required: true
          description: String to manage the deletion operation.
      tags:
        - appointments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a successfully deleted appointments confirmation.
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /subjects:
    post:
      summary: Saves the current subjects.
      tags:
        - subjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subjects:
                  type: string
                  example: "Subject 01, Subject 02, Subject 03"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON containing the saved subjects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  subjects:
                    type: string
                    example: "Subject 01, Subject 02, Subject 03"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    get:
      summary: Get the current subjects.
      tags:
        - subjects
      responses:
        '200':
          description: Returns a JSON containing the current subjects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  subjects:
                    type: string
                    example: "Subject 01, Subject 02, Subject 03"

  /laboratories:
    post:
      summary: Saves the current laboratories.
      tags:
        - laboratories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                laboratories_names:
                  type: string
                  example: "Laboratory 01, Laboratory 02, Laboratory 03"
                laboratories_numbers:
                  type: string
                  example: "01, 02, 03"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON containing the saved laboratories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  laboratories_names:
                    type: string
                    example: "Laboratory 01, Laboratory 02, Laboratory 03"
                  laboratories_numbers:
                    type: string
                    example: "01, 02, 03"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    get:
      summary: Get the current laboratories.
      tags:
        - laboratories
      responses:
        '200':
          description: Returns a JSON containing the current laboratories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  laboratories_names:
                    type: string
                    example: "Laboratory 01, Laboratory 02, Laboratory 03"
                  laboratories_numbers:
                    type: string
                    example: "01, 02, 03"

  /classrooms:
    post:
      summary: Saves the current classrooms.
      tags:
        - classrooms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                classrooms:
                  type: string
                  example: "Classroom 01, Classroom 02, Classroom 03"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON containing the saved classrooms.
          content:
            application/json:
              schema:
                type: object
                properties:
                  classrooms:
                    type: string
                    example: "Classroom 01, Classroom 02, Classroom 03"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    get:
      summary: Get the current classrooms.
      tags:
        - classrooms
      responses:
        '200':
          description: Returns a JSON containing the current classrooms.
          content:
            application/json:
              schema:
                type: object
                properties:
                  classrooms:
                    type: string
                    example: "Classroom 01, Classroom 02, Classroom 03"

  /schedules:
    post:
      summary: Saves the current schedules.
      tags:
        - schedules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      schedule_name:
                        type: string
                        example: "1st Time"
                      schedule_begin:
                        type: string
                        example: "07:20"
                      schedule_end:
                        type: string
                        example: "08:10"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON array containing the saved schedules.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schedule_name:
                      type: string
                      example: "1st Time"
                    schedule_begin:
                      type: string
                      example: "07:20"
                    schedule_end:
                      type: string
                      example: "08:10"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    get:
      summary: Get the current schedules.
      tags:
        - schedules
      responses:
        '200':
          description: Returns a JSON array containing the current schedules.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schedule_name:
                      type: string
                      example: "1st Time"
                    schedule_begin:
                      type: string
                      example: "07:20"
                    schedule_end:
                      type: string
                      example: "08:10"

  /notifications:
    post:
      summary: Creates a notification.
      tags:
        - notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: "schedules"
                description:
                  type: string
                  example: "Notification description"
                recipient_user_id:
                  type: string
                  format: uuid
                  example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON containing the created notification.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  type:
                    type: string
                    example: "schedules"
                  description:
                    type: string
                    example: "Notification description"
                  sender_user_id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  recipient_user_id:
                    type: string
                    format: uuid
                    example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                  created_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
                  updated_at:
                    type: string
                    format: dateformat
                    example: "2020-07-02T21:57:00.421Z"
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    get:
      summary: Get the user notifications.
      tags:
        - notifications
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a JSON array containing the user notifications.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                    type:
                      type: string
                      example: "schedules"
                    description:
                      type: string
                      example: "Notification description"
                    sender_user_id:
                      type: string
                      format: uuid
                      example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                    recipient_user_id:
                      type: string
                      format: uuid
                      example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
                    created_at:
                      type: string
                      format: dateformat
                      example: "2020-07-02T21:57:00.421Z"
                    updated_at:
                      type: string
                      format: dateformat
                      example: "2020-07-02T21:57:00.421Z"
  /notifications/{id}:
    delete:
      summary: Deletes a notification.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: "3c68c90a-009b-4c59-9c7f-dab2774e9a57"
          required: true
          description: Notification id to delete it.
      tags:
        - notifications
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a successfully deleted notification confirmation.
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
